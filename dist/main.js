var e,t,o,r,s=require("effector"),a=require("react/jsx-runtime"),c=require("effector-react");require("react"),e=module.exports,t="createSlotFactory",o=()=>p,Object.defineProperty(e,t,{get:o,set:r,enumerable:!0,configurable:!0});const i="hide",l="remove",n="set",d="show",u="attachLogger",m=e=>t=>{const o=s.createStore({component:()=>null,isVisible:!0}),r=s.createApi(o,{hide:e=>e.isVisible?{...e,isVisible:!1}:void 0,remove:e=>({...e,component:o.defaultState.component}),set:(e,t)=>({...e,component:t}),show:e=>e.isVisible?void 0:{...e,isVisible:!0}}),u=e=>e.id===t;s.guard({clock:e[i],filter:u,target:r.hide}),s.guard({clock:e[l],filter:u,target:r.remove}),s.sample({clock:s.guard({clock:e[n],filter:u}),fn:({component:e})=>e,target:r.set}),s.guard({clock:e[d],filter:u,target:r.show});return{Slot:(e={})=>c.useStoreMap({store:o,fn:({component:t,isVisible:r})=>r?o.defaultState.component===t?a.jsx(a.Fragment,{children:e.children}):a.jsx(t,{...e}):null,keys:[e]})}},g=({api:e,slots:t})=>{const o=new Map(Object.entries(t).map((([e,t])=>[t,e]))),r=s.createEvent(),a=s.createStore({shouldLog:!1,watchList:Object.values(t)}).on(r,((e,o)=>e.shouldLog?void 0:{shouldLog:!0,watchList:o?.watchList||Object.values(t)})),c=({action:e,slotId:t,slotName:o})=>`[effector-react-slots] ${o} -> ${e} // ${t}`,u=s.createEffect((({message:e})=>console.info(e))),m=r.watch((e=>{e?.fn&&u.use(e.fn),m()}));return s.guard({clock:s.sample({clock:[e.hide.map((({id:e})=>({action:i,slotId:e,slotName:o.get(e)}))),e.remove.map((({id:e})=>({action:l,slotId:e,slotName:o.get(e)}))),e.set.map((({id:e})=>({action:n,slotId:e,slotName:o.get(e)}))),e.show.map((({id:e})=>({action:d,slotId:e,slotName:o.get(e)})))],source:a,fn:({shouldLog:e,watchList:t},o)=>e&&t.includes(o.slotId)?o:null}),filter:e=>null!==e,target:u.prepend((e=>({message:c(e),meta:e})))}),r},p=e=>{const t={[i]:s.createEvent(),[l]:s.createEvent(),[n]:s.createEvent(),[d]:s.createEvent()};return{api:{...t,[u]:g({slots:e,api:t})},createSlot:m(t)}};